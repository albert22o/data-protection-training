#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∏—Ñ—Ä–∞ RSA
# –§–∞–π–ª: build_rsa.sh

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SRC_DIR="src"
LIB_DIR="lib"
BUILD_DIR="build"

# –ö–æ–º–ø–∏–ª—è—Ü–∏—è
compile() {
    echo "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã RSA..."
    
    mkdir -p $BUILD_DIR
    
    echo "[1/2] –ö–æ–º–ø–∏–ª—è—Ü–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ cryptography..."
    g++ -fPIC -shared $LIB_DIR/cryptography.cpp -o $BUILD_DIR/libcryptography.so -std=c++17 -Wall -O2
    
    echo "[2/2] –ö–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã rsa..."
    g++ $SRC_DIR/rsa.cpp -I$LIB_DIR -L$BUILD_DIR -lcryptography -o $BUILD_DIR/rsa -std=c++17 -Wall -O2
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: $BUILD_DIR/rsa"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏!"
        exit 1
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
genkeys() {
    key_file="${1:-$BUILD_DIR/rsa_keys.txt}"
    min_p="${2:-1000}"
    max_p="${3:-10000}"
    
    echo "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π RSA –≤ —Ñ–∞–π–ª: $key_file"
    LD_LIBRARY_PATH=$BUILD_DIR $BUILD_DIR/rsa genkeys "$key_file" "$min_p" "$max_p"
}

# –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–ê–ª–∏—Å–∞)
encrypt() {
    echo "üîí –®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞..."
    LD_LIBRARY_PATH=$BUILD_DIR $BUILD_DIR/rsa encrypt "$1" "$2" "$3"
}

# –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–ë–æ–±)
decrypt() {
    echo "üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞..."
    LD_LIBRARY_PATH=$BUILD_DIR $BUILD_DIR/rsa decrypt "$1" "$2" "$3"
}

# –û—á–∏—Å—Ç–∫–∞
clean() {
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏..."
    rm -rf $BUILD_DIR/*
    echo "–ì–æ—Ç–æ–≤–æ!"
}

# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
demo() {
    echo "üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —à–∏—Ñ—Ä–∞ RSA..."
    compile
    
    TEST_FILE="$BUILD_DIR/test_message.txt"
    ENCRYPTED_FILE="$BUILD_DIR/test_encrypted.bin"
    DECRYPTED_FILE="$BUILD_DIR/test_decrypted.txt"
    KEY_FILE="$BUILD_DIR/demo_keys.txt"
    
    echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞..."
    echo "Hello, RSA!" > "$TEST_FILE"
    echo "This is a test message encrypted using RSA algorithm." >> "$TEST_FILE"
    
    echo "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π..."
    genkeys "$KEY_FILE" 2000 8000
    
    echo "–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–ê–ª–∏—Å–∞ ‚Üí –ë–æ–±)..."
    encrypt "$TEST_FILE" "$ENCRYPTED_FILE" "$KEY_FILE"
    
    echo "–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (–ë–æ–± –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ)..."
    decrypt "$ENCRYPTED_FILE" "$DECRYPTED_FILE" "$KEY_FILE"
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞..."
    if cmp -s "$TEST_FILE" "$DECRYPTED_FILE"; then
        echo "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –§–∞–π–ª—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã."
    else
        echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è!"
    fi
    
    echo ""
    echo "üìÇ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã:"
    echo "  –ò—Å—Ö–æ–¥–Ω—ã–π:     $TEST_FILE"
    echo "  –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π: $ENCRYPTED_FILE"
    echo "  –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π: $DECRYPTED_FILE"
    echo "  –ö–ª—é—á–∏:        $KEY_FILE"
}

# –ü–æ–º–æ—â—å
help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  compile                       - –∫–æ–º–ø–∏–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã RSA"
    echo "  genkeys [file] [min] [max]    - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π (P,Q,d,c)"
    echo "  encrypt input output key      - —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π d)"
    echo "  decrypt input output key      - —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π c)"
    echo "  demo                          - –±—ã—Å—Ç—Ä–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã RSA"
    echo "  clean                         - –æ—á–∏—Å—Ç–∏—Ç—å build-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 compile"
    echo "  $0 genkeys"
    echo "  $0 genkeys mykeys.txt 2000 8000"
    echo "  $0 encrypt text.txt encrypted.bin keys.txt"
    echo "  $0 decrypt encrypted.bin decrypted.txt keys.txt"
    echo "  $0 demo"
    echo "  $0 clean"
}

case "$1" in
    "compile")
        compile
        ;;
    "genkeys")
        genkeys "$2" "$3" "$4"
        ;;
    "encrypt")
        encrypt "$2" "$3" "$4"
        ;;
    "decrypt")
        decrypt "$2" "$3" "$4"
        ;;
    "demo")
        demo
        ;;
    "clean")
        clean
        ;;
    *)
        help
        ;;
esac
